{"version":3,"sources":["components/CourseViewer.tsx","components/ControlPanel.tsx","components/SemesterViewer.tsx","components/CourseListViewer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CourseViewer","course","Col","name","prof","prereq","ControlPanel","setCourse","courseVal","courseID","setID","courseDeck","addCourse","removeCourse","setSem","sem","addSem","removeSem","resetSems","clearSem","renameSem","semDeck","semIndex","setSemIndex","Button","onClick","length","newSemName","holderVal","prompt","semName","courseLoad","SemesterViewer","retval2","x","Row","CourseListViewer","courseDeckVal","App","document","title","useState","courseList","setSemDeck","activeSemester","setActiveSemester","activeSemesterIndex","setActiveSemesterIndex","activeCourse","setActiveCourse","activeID","setActiveID","Container","className","newCourse","contains","newSemDeck","alert","newCourseLoad","y","newSem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0b649c4b.chunk.js","sourcesContent":["\nimport React from \"react\";\nimport {Col} from \"react-bootstrap\";\nimport { Course } from \"../interfaces/course\";\nexport function CourseViewer({course}: {course: Course}): JSX.Element {\n\treturn <Col>\n\t\t<h2>Class Select</h2>\n\t\t<div>Class: {course.name}</div>\n\t\t<div>Professor: {course.prof}</div>\n\t\t<div>Prereq: {course.prereq}</div>\n\t</Col>;\n}\n","import React from \"react\";\nimport {Button, Col} from \"react-bootstrap\";\nimport { Course } from \"../interfaces/course\";\nimport { Semester } from \"../interfaces/semester\";\n\nexport function ControlPanel({setCourse, courseVal, courseID, setID, courseDeck, addCourse, removeCourse, setSem, sem, addSem, removeSem, resetSems, clearSem, renameSem, semDeck, semIndex, setSemIndex}:{setCourse: (c: Course)=>void, courseVal: Course, courseID: number, setID: (r: number)=>void, courseDeck: Course[], addCourse: (m: Course)=> void, removeCourse: (o: Course)=>void, setSem: (z: Semester)=>void, sem: Semester, addSem: (j: Semester) => void, removeSem: (l: Semester) => void, resetSems:(q: void) => void, clearSem: (n: void) => void, renameSem: (p: void) => void, semDeck: Semester[], semIndex: number, setSemIndex: (k: number) => void}): JSX.Element {\n\treturn <Col>\n\t\t<h2>ControlPanel</h2>\n\t\t<Button onClick={\n\t\t\t() => {\n\t\t\t\tif(courseID != 0){\n\t\t\t\t\tsetCourse(courseDeck[courseID-1]);\n\t\t\t\t\tsetID(courseID - 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}>Previous Class</Button>\n\t\t<Button onClick= {\n\t\t\t() => {\n\t\t\t\taddCourse(courseVal);\n\t\t\t}\n\t\t}>Add Class</Button>\n\t\t<Button onClick ={\n\t\t\t() => {\n\t\t\t\tremoveCourse(courseVal);\n\t\t\t}\n\t\t}>Remove Class</Button>\n\t\t<Button onClick={ \n\t\t\t() => {\n\t\t\t\tif(courseID != courseDeck.length-1){\n\t\t\t\t\tsetCourse(courseDeck[courseID + 1]); \n\t\t\t\t\tsetID(courseID +1);\n\t\t\t\t}\n\t\t\t}\n\t\t}>Next Class</Button>\n\t\t\n\t\t<br></br>\n\t\t<Button onClick ={\n\t\t\t() => {\n\t\t\t\t\n\t\t\t\tif(semIndex != 0){\n\t\t\t\t\tsetSem(semDeck[semIndex-1]);\n\t\t\t\t\tsetSemIndex(semIndex -1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t}>Previous Semester</Button>\n\t\t<Button onClick ={\n\t\t\t() => {\n\t\t\t\tlet newSemName = \"\";\n\t\t\t\tconst holderVal = prompt(\"Enter Name:\");\n\t\t\t\tif(holderVal != null){\n\t\t\t\t\tnewSemName = holderVal;\n\t\t\t\t}\n\t\t\t\taddSem({semName: newSemName, courseLoad: []});\n\t\t\t}\n\t\t}>Add Semester </Button>\n\t\t<Button onClick ={\n\t\t\t() => {\n\t\t\t\tclearSem();\n\t\t\t}\n\t\t}>Clear Semester</Button>\n\t\t<Button onClick ={\n\t\t\t() => {\n\t\t\t\tif(semIndex != semDeck.length -1){\n\t\t\t\t\tsetSem(semDeck[semIndex+1]);\n\t\t\t\t\tsetSemIndex(semIndex + 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}>Next Semester</Button>\n\t\t<br></br>\n\t\t<Button onClick ={\n\t\t\t() => {\n\t\t\t\trenameSem();\n\t\t\t}\n\t\t}>Rename Semester</Button>\n\t\t<Button onClick ={\n\t\t\t() => {\n\t\t\t\tremoveSem(sem);\n\t\t\t}\n\t\t}>Remove Semester</Button>\n\t\t<Button onClick ={\n\t\t\t() =>{\n\t\t\t\tresetSems();\n\t\t\t}\n\t\t}>Reset Semesters</Button>\n\t</Col>;\n}","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\n//import {Semester} from \"../interfaces/semester\";\nimport { Semester } from \"../interfaces/semester\";\n\n\nexport function SemesterViewer({sem}: {sem: Semester}): JSX.Element {\n\t/*\n\tlet retval = \"\";\n\tretval += sem.name;\n\tretval += \":\\n\";\n\t//sem.classA = \"cisc275\";\n\tif(sem.classA != \"none\"){\n\t\tretval += sem.classA;\n\t\tretval += \"\\n\";\n\t}\n\tif(sem.classB != \"none\"){\n\t\tretval += sem.classB;\n\t\tretval += \"\\n\";\n\t}\n\tif(sem.classC != \"none\"){\n\t\tretval += sem.classC;\n\t\tretval += \"\\n\";\n\t}\n\tif(sem.classD != \"none\"){\n\t\tretval += sem.classD;\n\t\tretval += \"\\n\";\n\t}\n\t*/\n\t\n\tlet retval2 = \"\";\n\tretval2 += sem.semName + \": \";\n\tfor(const x in sem.courseLoad){\n\t\tretval2 += sem.courseLoad[x].name + \", \";\n\t}\n\t\n\treturn <Row>\n\t\t<h2>Semesters:</h2>\n\t\t<div>{retval2}</div>\n\t</Row>;\n}","import React from \"react\";\nimport {Row} from \"react-bootstrap\";\n//import courseList from \"../assets/classList.json\";\nimport {Course} from \"../interfaces/course\";\n\n/*old way of getting course list\nlet retval = \"\";\nfor(const x in courseList){ \n\t//checked below after Prof suggestions, is not necessary... keeping commented just in case...\n\t//courseList as Course[];\n\tretval += JSON.stringify(courseList[x].name);\n\tretval+= \", \";\n}\n*/\nexport function CourseListViewer({courseDeckVal}: {courseDeckVal: Course[]}): JSX.Element {\n\tlet retval2 = \"\";\n\tfor(const x in courseDeckVal){\n\t\tretval2 += courseDeckVal[x].name + \", \";\n\t}\n\treturn <Row>\n\t\t<h1>Class List:</h1>\n\t\t<div>{retval2}</div>\n\t</Row>;\n}","//imports\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport {Container, Row} from \"react-bootstrap\";\n//assets\nimport courseList from \"./assets/classList.json\";\n//components\nimport { CourseViewer } from \"./components/CourseViewer\";\nimport { ControlPanel } from \"./components/ControlPanel\";\nimport { SemesterViewer } from \"./components/SemesterViewer\";\nimport { CourseListViewer } from \"./components/CourseListViewer\";\n//interfaces\nimport { Course } from \"./interfaces/course\";\n//import { Semester } from \"./interfaces/semester\";\nimport { Semester } from \"./interfaces/semester\";\n\n\n\n\n\n\nfunction App (): JSX.Element {\n\tdocument.title = \"UD CISC Scheduler Team 18\";\n\n\t//USE STATES:\n\t//postMVP use states to order later... Decks...\n\tconst [courseDeck] = useState<Course[]>(courseList);\n\tconst [semDeck, setSemDeck] = useState<Semester[]>([{semName: \"New Semester\", courseLoad: []}]);\n\t//semester use states\n\tconst [activeSemester, setActiveSemester] = useState<Semester>(semDeck[0]);\n\tconst [activeSemesterIndex, setActiveSemesterIndex] = useState<number>(0);\n\t//class use states\n\tconst [activeCourse, setActiveCourse] = useState<Course>(courseList[0]);\n\tconst [activeID, setActiveID] = useState<number>(0);\n\n\n\t//FUNCTIONS:\n\n\t//Adds a new semester to our semester list use state, called in control panel.\n\tfunction addSem(newSem: Semester){\n\t\tsetSemDeck([...semDeck, newSem]);\n\t}\n\t//Removes current selected semester from the semester deck use state, called in control panel...\n\tfunction removeSem(newSem: Semester){\n\t\tif(semDeck.length == 1){\n\t\t\talert(\"Only 1 Semester, cannot delete.\");\n\t\t}else{\n\n\t\t\n\t\t\tlet newSemDeck: Semester[] = [];\n\t\t\tfor(const x in semDeck){\n\t\t\t\tif(semDeck[x].semName != newSem.semName){\n\t\t\t\t\tnewSemDeck = [...newSemDeck, semDeck[x]];\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetSemDeck(newSemDeck);\n\t\t\tsetActiveSemester(newSemDeck[0]);\n\t\t\tsetActiveSemesterIndex(0);\n\t\t}\n\t}\n\t//adds current activeCourse to current active semester and updates semDeck. called in Control Panel\n\tfunction addCourse(newCourse: Course){\n\t\tlet contains = false;\n\t\tfor( const x in activeSemester.courseLoad){\n\t\t\tif (activeSemester.courseLoad[x] == newCourse){\n\t\t\t\tcontains = true;\n\t\t\t}\n\t\t}\n\t\tif(contains == false){\n\t\t\tlet newSemDeck: Semester[] = [];\n\t\t\tfor(const x in semDeck){\n\t\t\t\tif(semDeck[x] != activeSemester){\n\t\t\t\t\tnewSemDeck = [...newSemDeck, semDeck[x]];\n\t\t\t\t}else{\n\t\t\t\t\tnewSemDeck = [...newSemDeck, {semName: activeSemester.semName, courseLoad: [...activeSemester.courseLoad, newCourse]}];\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetSemDeck(newSemDeck);\n\t\t\tsetActiveSemester(newSemDeck[activeSemesterIndex]);\n\t\t}else{\n\t\t\talert(\"Class already added!\");\n\t\t}\n\t}\n\t//clears semester of all classes and updates the relating use states... called in control panel\n\tfunction clearSemester(){\n\t\tlet newSemDeck: Semester[] = [];\n\t\tfor(const x in semDeck){\n\t\t\tif(semDeck[x] != activeSemester){\n\t\t\t\tnewSemDeck = [...newSemDeck, semDeck[x]];\n\t\t\t}else{\n\t\t\t\tnewSemDeck = [...newSemDeck, {semName: activeSemester.semName, courseLoad: []}];\n\t\t\t}\n\t\t}\n\t\tsetSemDeck(newSemDeck);\n\t\tsetActiveSemester(newSemDeck[activeSemesterIndex]);\n\t}\n\tfunction resetSems(){\n\t\tconst newSemDeck: Semester[] = [{semName: \"My New Semester\", courseLoad: []}];\n\t\tsetSemDeck(newSemDeck);\n\t\tsetActiveSemesterIndex(0);\n\t\tsetActiveSemester(newSemDeck[0]);\n\t}\n\t//removes the current active course from the current active semester and updates the use states accordingly... called in control panel\n\tfunction removeCourse( newCourse: Course){\n\t\tlet newSemDeck: Semester[] = [];\n\t\tfor(const x in semDeck){\n\t\t\tif(semDeck[x] != activeSemester){\n\t\t\t\tnewSemDeck = [...newSemDeck, semDeck[x]];\n\t\t\t}else{\n\t\t\t\tlet newCourseLoad: Course[] = [];\n\t\t\t\tfor(const y in semDeck[x].courseLoad){\n\t\t\t\t\tif(semDeck[x].courseLoad[y] != newCourse){\n\t\t\t\t\t\tnewCourseLoad = [...newCourseLoad, semDeck[x].courseLoad[y]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnewSemDeck = [...newSemDeck, {semName: semDeck[x].semName, courseLoad: newCourseLoad}];\n\t\t\t}\n\t\t}\n\t\tsetSemDeck(newSemDeck);\n\t\tsetActiveSemester(newSemDeck[activeSemesterIndex]);\n\t}\n\t//function renames the current active semester and updates the corresponding usestates... called in control panel\n\tfunction renameSemester(){\n\t\tlet newSemDeck: Semester[] = [];\n\t\tlet newSemName = \"\";\n\t\t\t\tconst holderVal = prompt(\"Enter Name:\");\n\t\t\t\tif(holderVal != null){\n\t\t\t\t\tnewSemName = holderVal;\n\t\t\t\t}\n\t\t\t\tfor(const x in semDeck){\n\t\t\t\t\tif(semDeck[x] != activeSemester){\n\t\t\t\t\t\tnewSemDeck = [...newSemDeck, semDeck[x]];\n\t\t\t\t\t}else{\n\t\t\t\t\t\tnewSemDeck = [...newSemDeck, {semName: newSemName, courseLoad: semDeck[x].courseLoad}];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tsetSemDeck(newSemDeck);\n\t\t\t\tsetActiveSemester(newSemDeck[activeSemesterIndex]);\n\t}\n\n\n\n\t//RETURN VALUE:\n\treturn (\n\t\t<Container className=\"App\">\n\t\t\t<CourseListViewer courseDeckVal ={courseDeck}></CourseListViewer>\n\t\t\t<Row>\n\t\t\t\t<h1>UD CIS Scheduler Team 18 Andrew McCracken</h1>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<ControlPanel \n\t\t\t\tsetCourse={setActiveCourse} \n\t\t\t\tcourseVal = {activeCourse} \n\t\t\t\tcourseID = {activeID} setID = {setActiveID}\n\t\t\t\tcourseDeck = {courseDeck}\n\t\t\t\taddCourse = {addCourse}\n\t\t\t\tremoveCourse = {removeCourse}  \n\t\t\t\tsetSem = {setActiveSemester}\n\t\t\t\tsem = {activeSemester}\n\t\t\t\taddSem = {addSem}\n\t\t\t\tremoveSem = {removeSem}\n\t\t\t\tclearSem = {clearSemester}\n\t\t\t\tresetSems = {resetSems}\n\t\t\t\trenameSem = {renameSemester}\n\t\t\t\tsemDeck = {semDeck}\n\t\t\t\tsemIndex = {activeSemesterIndex}\n\t\t\t\tsetSemIndex = {setActiveSemesterIndex} ></ControlPanel>\n\t\t\t\t<CourseViewer course ={activeCourse} ></CourseViewer>\n\t\t\t</Row>\n\t\t\t<SemesterViewer sem = {activeSemester}></SemesterViewer>\n\t\t</Container>\n\t);\n  \n\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler): void => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}